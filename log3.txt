>>> Current State: 
Execution Stack: 
> int v | a = True | if (a) then [ v = 2 ] else [ v = 3] | print: v
> boolean a
Output: []
Symbols:

Files:


<--- STEP --->

>>> Current State: 
Execution Stack: 
> int v | a = True | if (a) then [ v = 2 ] else [ v = 3] | print: v
Output: []
Symbols:
[a, False]

Files:


<--- STEP --->

>>> Current State: 
Execution Stack: 
> a = True | if (a) then [ v = 2 ] else [ v = 3] | print: v
> int v
Output: []
Symbols:
[a, False]

Files:


<--- STEP --->

>>> Current State: 
Execution Stack: 
> a = True | if (a) then [ v = 2 ] else [ v = 3] | print: v
Output: []
Symbols:
[a, False]
[v, 0]

Files:


<--- STEP --->

>>> Current State: 
Execution Stack: 
> if (a) then [ v = 2 ] else [ v = 3] | print: v
> a = True
Output: []
Symbols:
[a, False]
[v, 0]

Files:


<--- STEP --->

>>> Current State: 
Execution Stack: 
> if (a) then [ v = 2 ] else [ v = 3] | print: v
Output: []
Symbols:
[a, True]
[v, 0]

Files:


<--- STEP --->

>>> Current State: 
Execution Stack: 
> print: v
> if (a) then [ v = 2 ] else [ v = 3]
Output: []
Symbols:
[a, True]
[v, 0]

Files:


<--- STEP --->

>>> Current State: 
Execution Stack: 
> print: v
> v = 2
Output: []
Symbols:
[a, True]
[v, 0]

Files:


<--- STEP --->

>>> Current State: 
Execution Stack: 
> print: v
Output: []
Symbols:
[a, True]
[v, 2]

Files:


<--- STEP --->

>>> Current State: 
Execution Stack: 
Output: [2]
Symbols:
[a, True]
[v, 2]

Files:


<--- STEP --->

