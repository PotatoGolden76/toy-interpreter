ID: 7
>>> Current State: 
Execution Stack: 
> Ref(int) v | new(v, 20) | Ref(Ref(int)) a | new(a, v) | new(v, 30) | print: readHeap(readHeap(a))
Output: []
Symbols:

Files:

Heap: 


<--- STEP --->

ID: 7
>>> Current State: 
Execution Stack: 
> new(v, 20) | Ref(Ref(int)) a | new(a, v) | new(v, 30) | print: readHeap(readHeap(a))
> Ref(int) v
Output: []
Symbols:

Files:

Heap: 


<--- STEP --->

ID: 7
>>> Current State: 
Execution Stack: 
> new(v, 20) | Ref(Ref(int)) a | new(a, v) | new(v, 30) | print: readHeap(readHeap(a))
> Ref(int) v
Output: []
Symbols:

Files:

Heap: 


<--- STEP --->

ID: 7
>>> Current State: 
Execution Stack: 
> new(v, 20) | Ref(Ref(int)) a | new(a, v) | new(v, 30) | print: readHeap(readHeap(a))
Output: []
Symbols:
[v, (0, int)]

Files:

Heap: 


<--- STEP --->

ID: 7
>>> Current State: 
Execution Stack: 
> new(v, 20) | Ref(Ref(int)) a | new(a, v) | new(v, 30) | print: readHeap(readHeap(a))
Output: []
Symbols:
[v, (0, int)]

Files:

Heap: 


<--- STEP --->

ID: 7
>>> Current State: 
Execution Stack: 
> Ref(Ref(int)) a | new(a, v) | new(v, 30) | print: readHeap(readHeap(a))
> new(v, 20)
Output: []
Symbols:
[v, (0, int)]

Files:

Heap: 


<--- STEP --->

ID: 7
>>> Current State: 
Execution Stack: 
> Ref(Ref(int)) a | new(a, v) | new(v, 30) | print: readHeap(readHeap(a))
> new(v, 20)
Output: []
Symbols:
[v, (0, int)]

Files:

Heap: 


<--- STEP --->

ID: 7
>>> Current State: 
Execution Stack: 
> Ref(Ref(int)) a | new(a, v) | new(v, 30) | print: readHeap(readHeap(a))
Output: []
Symbols:
[v, (1, int)]

Files:

Heap: 
1->20


<--- STEP --->

ID: 7
>>> Current State: 
Execution Stack: 
> Ref(Ref(int)) a | new(a, v) | new(v, 30) | print: readHeap(readHeap(a))
Output: []
Symbols:
[v, (1, int)]

Files:

Heap: 
1->20


<--- STEP --->

ID: 7
>>> Current State: 
Execution Stack: 
> new(a, v) | new(v, 30) | print: readHeap(readHeap(a))
> Ref(Ref(int)) a
Output: []
Symbols:
[v, (1, int)]

Files:

Heap: 
1->20


<--- STEP --->

ID: 7
>>> Current State: 
Execution Stack: 
> new(a, v) | new(v, 30) | print: readHeap(readHeap(a))
> Ref(Ref(int)) a
Output: []
Symbols:
[v, (1, int)]

Files:

Heap: 
1->20


<--- STEP --->

ID: 7
>>> Current State: 
Execution Stack: 
> new(a, v) | new(v, 30) | print: readHeap(readHeap(a))
Output: []
Symbols:
[a, (0, Ref(int))]
[v, (1, int)]

Files:

Heap: 
1->20


<--- STEP --->

ID: 7
>>> Current State: 
Execution Stack: 
> new(a, v) | new(v, 30) | print: readHeap(readHeap(a))
Output: []
Symbols:
[a, (0, Ref(int))]
[v, (1, int)]

Files:

Heap: 
1->20


<--- STEP --->

ID: 7
>>> Current State: 
Execution Stack: 
> new(v, 30) | print: readHeap(readHeap(a))
> new(a, v)
Output: []
Symbols:
[a, (0, Ref(int))]
[v, (1, int)]

Files:

Heap: 
1->20


<--- STEP --->

ID: 7
>>> Current State: 
Execution Stack: 
> new(v, 30) | print: readHeap(readHeap(a))
> new(a, v)
Output: []
Symbols:
[a, (0, Ref(int))]
[v, (1, int)]

Files:

Heap: 
1->20


<--- STEP --->

ID: 7
>>> Current State: 
Execution Stack: 
> new(v, 30) | print: readHeap(readHeap(a))
Output: []
Symbols:
[a, (2, Ref(int))]
[v, (1, int)]

Files:

Heap: 
1->20
2->(1, int)


<--- STEP --->

ID: 7
>>> Current State: 
Execution Stack: 
> new(v, 30) | print: readHeap(readHeap(a))
Output: []
Symbols:
[a, (2, Ref(int))]
[v, (1, int)]

Files:

Heap: 
1->20
2->(1, int)


<--- STEP --->

ID: 7
>>> Current State: 
Execution Stack: 
> print: readHeap(readHeap(a))
> new(v, 30)
Output: []
Symbols:
[a, (2, Ref(int))]
[v, (1, int)]

Files:

Heap: 
1->20
2->(1, int)


<--- STEP --->

ID: 7
>>> Current State: 
Execution Stack: 
> print: readHeap(readHeap(a))
> new(v, 30)
Output: []
Symbols:
[a, (2, Ref(int))]
[v, (1, int)]

Files:

Heap: 
1->20
2->(1, int)


<--- STEP --->

ID: 7
>>> Current State: 
Execution Stack: 
> print: readHeap(readHeap(a))
Output: []
Symbols:
[a, (2, Ref(int))]
[v, (3, int)]

Files:

Heap: 
1->20
2->(1, int)
3->30


<--- STEP --->

ID: 7
>>> Current State: 
Execution Stack: 
> print: readHeap(readHeap(a))
Output: []
Symbols:
[a, (2, Ref(int))]
[v, (3, int)]

Files:

Heap: 
1->20
2->(1, int)
3->30


<--- STEP --->

ID: 7
>>> Current State: 
Execution Stack: 
Output: [20]
Symbols:
[a, (2, Ref(int))]
[v, (3, int)]

Files:

Heap: 
1->20
2->(1, int)
3->30


<--- STEP --->

